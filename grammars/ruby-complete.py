ctx.rule(u'START',u'{PROGRAM}')

ctx.rule(u'PROGRAM', u'{COMPSTMT}')

ctx.rule(u'COMPSTMT', u'{STMT}{TERM_EXPR_REP}{TERM_OPT}')

ctx.rule(u'STMT', u'{CALL} do {BLOCK_VAR_OPT} {COMPSTMT} end')
ctx.rule(u'STMT', u'undef {FNAME}')
ctx.rule(u'STMT', u'alias {FNAME} {FNAME}')
ctx.rule(u'STMT', u'{STMT} if {EXPR}')
ctx.rule(u'STMT', u'{STMT} while {EXPR}')
ctx.rule(u'STMT', u'{STMT} unless {EXPR}')
ctx.rule(u'STMT', u'{STMT} until {EXPR}')
ctx.rule(u'STMT', u'BEGIN {COMPSTMT} end')
ctx.rule(u'STMT', u'END {COMPSTMT} end')
ctx.rule(u'STMT', u'{LHS} = {COMMAND} do {BLOCK_VAR_OPT} {COMPSTMT} end')
ctx.rule(u'STMT', u'{LHS} = {COMMAND}')
ctx.rule(u'STMT', u'{EXPR}')

ctx.rule(u'EXPR', u'{MLHS} = {MRHS}')
ctx.rule(u'EXPR', u'return {CALL_ARGS}')
ctx.rule(u'EXPR', u'yield {CALL_ARGS}')
ctx.rule(u'EXPR', u'{EXPR} and {EXPR}')
ctx.rule(u'EXPR', u'{EXPR} or {EXPR}')
ctx.rule(u'EXPR', u'not {EXPR}')
ctx.rule(u'EXPR', u'{COMMAND}')
ctx.rule(u'EXPR', u'! {COMMAND}')
ctx.rule(u'EXPR', u'{ARG}')

ctx.rule(u'CALL', u'{FUNCTION}')
ctx.rule(u'CALL', u'{COMMAND}')

ctx.rule(u'COMMAND', u'{OPERATION} {CALL_ARGS}')
ctx.rule(u'COMMAND', u'{PRIMARY}.{OPERATION} {CALL_ARGS}')
ctx.rule(u'COMMAND', u'{PRIMARY}::{OPERATION} {CALL_ARGS}')
ctx.rule(u'COMMAND', u'super {CALL_ARGS}')

ctx.rule(u'FUNCTION', u'{OPERATION} {CALL_ARGS_BRACKETS_OPT}')
ctx.rule(u'FUNCTION', u'{PRIMARY}.{OPERATION}({CALL_ARGS_OPT})')
ctx.rule(u'FUNCTION', u'{PRIMARY}::{OPERATION}({CALL_ARGS_OPT})')
ctx.rule(u'FUNCTION', u'{PRIMARY}.{OPERATION}')
ctx.rule(u'FUNCTION', u'{PRIMARY}::{OPERATION}')
ctx.rule(u'FUNCTION', u'super ({CALL_ARGS_OPT})')
ctx.rule(u'FUNCTION', u'super')

ctx.rule(u'ARG', u'{LHS} = {ARG}')
ctx.rule(u'ARG', u'{LHS} {OP_ASGN} {ARG}')
ctx.rule(u'ARG', u'{ARG} .. {ARG}')
ctx.rule(u'ARG', u'{ARG} ... {ARG}')
ctx.rule(u'ARG', u'{ARG} + {ARG}')
ctx.rule(u'ARG', u'{ARG} - {ARG}')
ctx.rule(u'ARG', u'{ARG} * {ARG}')
ctx.rule(u'ARG', u'{ARG} / {ARG}')
ctx.rule(u'ARG', u'{ARG} % {ARG}')
ctx.rule(u'ARG', u'{ARG} ** {ARG}')
ctx.rule(u'ARG', u'+ {ARG}')
ctx.rule(u'ARG', u'- {ARG}')
ctx.rule(u'ARG', u'{ARG} | {ARG}')
ctx.rule(u'ARG', u'{ARG} ^ {ARG}')
ctx.rule(u'ARG', u'{ARG} & {ARG}')
ctx.rule(u'ARG', u'{ARG} <=> {ARG}')
ctx.rule(u'ARG', u'{ARG} > {ARG}')
ctx.rule(u'ARG', u'{ARG} >= {ARG}')
ctx.rule(u'ARG', u'{ARG} < {ARG}')
ctx.rule(u'ARG', u'{ARG} <= {ARG}')
ctx.rule(u'ARG', u'{ARG} == {ARG}')
ctx.rule(u'ARG', u'{ARG} === {ARG}')
ctx.rule(u'ARG', u'{ARG} != {ARG}')
ctx.rule(u'ARG', u'{ARG} =~ {ARG}')
ctx.rule(u'ARG', u'{ARG} !~ {ARG}')
ctx.rule(u'ARG', u'! {ARG}')
ctx.rule(u'ARG', u'~ {ARG}')
ctx.rule(u'ARG', u'{ARG} << {ARG}')
ctx.rule(u'ARG', u'{ARG} >> {ARG}')
ctx.rule(u'ARG', u'{ARG} && {ARG}')
ctx.rule(u'ARG', u'{ARG} || {ARG}')
ctx.rule(u'ARG', u'defined? {ARG}')
ctx.rule(u'ARG', u'{PRIMARY}')

ctx.rule(u'PRIMARY', u'({COMPSTMT})')
ctx.rule(u'PRIMARY', u'{LITERAL}')
ctx.rule(u'PRIMARY', u'{VARIABLE}')
ctx.rule(u'PRIMARY', u'{PRIMARY}::{IDENTIFIER}')
ctx.rule(u'PRIMARY', u'::{IDENTIFIER}')
ctx.rule(u'PRIMARY', u'{PRIMARY} [{ARGS_OPT}]')
ctx.rule(u'PRIMARY', u'[{ARGS_OPT}]')
ctx.rule(u'PRIMARY', u'return {CALL_ARGS_BRACKETS_OPT}')
ctx.rule(u'PRIMARY', u'yield {CALL_ARGS_BRACKETS_OPT}')
ctx.rule(u'PRIMARY', u'defined? ({ARG})')
ctx.rule(u'PRIMARY', u'{FUNCTION}')
ctx.rule(u'PRIMARY', u'{FUNCTION} \{{BLOCK_VAR_OPT} {COMPSTMT}\}\n')
ctx.rule(u'PRIMARY', u'if {EXPR} {THEN}\n{COMPSTMT}\n{ELSIF_REP} {ELSE_OPT} end\n')
ctx.rule(u'PRIMARY', u'unless {EXPR} {THEN} {COMPSTMT} {ELSE_OPT} end\n')
ctx.rule(u'PRIMARY', u'while {EXPR} {DO} {COMPSTMT} end\n')
ctx.rule(u'PRIMARY', u'until {EXPR} {DO} {COMPSTMT} end\n')
ctx.rule(u'PRIMARY', u'case {COMPSTMT} when {WHEN_ARGS} {THEN} {COMPSTMT} {ELSE_OPT} end\n')
ctx.rule(u'PRIMARY', u'for {BLOCK_VAR} in {EXPR} {DO} {COMPSTMT} end\n')
ctx.rule(u'PRIMARY', u'begin {COMPSTMT} {RESCUE_OPT} {ELSE_OPT} {ENSURE_OPT} end\n')
ctx.rule(u'PRIMARY', u'class {IDENTIFIER} {INHERITANCE_OPT} {COMPSTMT} end\n')
ctx.rule(u'PRIMARY', u'module {IDENTIFIER} {COMPSTMT} end\n')
ctx.rule(u'PRIMARY', u'def {FNAME} {ARGDECL} {COMPSTMT} end\n')
ctx.rule(u'PRIMARY', u'def {SINGLETON} {DOTS} {FNAME} {ARGDECL} {COMPSTMT} end\n')

ctx.rule(u'WHEN_ARGS', u'{ARGS}{ARG_AST_OPT}')
ctx.rule(u'WHEN_ARGS', u'*{ARG}')

ctx.rule(u'THEN', u'{TERM}')
ctx.rule(u'THEN', u'then')
ctx.rule(u'THEN', u'{TERM} then')

ctx.rule(u'DO', u'{TERM}')
ctx.rule(u'DO', u'do')
ctx.rule(u'DO', u'{TERM} do')

ctx.rule(u'BLOCK_VAR', u'{LHS}')
ctx.rule(u'BLOCK_VAR', u'{MLHS}')

ctx.rule(u'MLHS', u'{MLHS_ITEM}, {MLHS_ITEM_OPT} * {LHS}')
ctx.rule(u'MLHS', u'{MLHS_ITEM}, {MLHS_ITEM_OPT}')
ctx.rule(u'MLHS', u'* {LHS}')

ctx.rule(u'MLHS_ITEM', u'{LHS}')
ctx.rule(u'MLHS_ITEM', u'({MLHS})')

ctx.rule(u'LHS', u'{VARIABLE}')
ctx.rule(u'LHS', u'{PRIMARY} [{ARGS_OPT}]')
ctx.rule(u'LHS', u'{PRIMARY}.{IDENTIFIER}')

ctx.rule(u'MRHS', u'{ARGS}{ARG_AST_OPT}')
ctx.rule(u'MRHS', u'* {ARG}')

ctx.rule(u'CALL_ARGS', u'{ARGS}')
ctx.rule(u'CALL_ARGS', u'{ARGS} {ASSOCS_OPT} {ARG_AST_OPT} {ARG_AMP_OPT}')
ctx.rule(u'CALL_ARGS', u'ASSOCS {ARG_AST_OPT} {ARG_AMP_OPT}')
ctx.rule(u'CALL_ARGS', u'* {ARG} {ARG_AMP_OPT}')
ctx.rule(u'CALL_ARGS', u'& {ARG}')
ctx.rule(u'CALL_ARGS', u'{COMMAND}')

ctx.rule(u'ARGS', u'{ARG}, {ARGS}')
ctx.rule(u'ARGS', u'{ARG}')

ctx.rule(u'ARGDECL', u'({ARGLIST})')
ctx.rule(u'ARGDECL', u'{ARGLIST} {TERM}')

ctx.rule(u'ARGLIST', u'{IDENTIFIER}{IDENTIFIER_REP}{IDENTIFIER_AST_OPT}{IDENTIFIER_AMP_OPT}')
ctx.rule(u'ARGLIST', u'*{IDENTIFIER}{IDENTIFIER_AMP_OPT}')
ctx.rule(u'ARGLIST', u'&{IDENTIFIER}')
ctx.rule(u'ARGLIST', u'')

ctx.rule(u'SINGLETON', u'{VARIABLE}')
ctx.rule(u'SINGLETON', u'({EXPR})')

ctx.rule(u'ASSOCS', u'{ASSOC}{ASSOC_REP}')

ctx.rule(u'ASSOC', u'{ARG}=>{ARG}')

ctx.rule(u'VARIABLE', u'{VARNAME}')
ctx.rule(u'VARIABLE', u'nil')
ctx.rule(u'VARIABLE', u'self')

ctx.rule(u'LITERAL', u'{NUMERIC}')
ctx.rule(u'LITERAL', u'{SYMBOL}')
ctx.rule(u'LITERAL', u'{STRING}')
ctx.rule(u'LITERAL', u'{STRING2}')
ctx.rule(u'LITERAL', u'{HERE_DOC}')
ctx.rule(u'LITERAL', u'{REGEXP}')

ctx.rule(u'TERM_OPT', u'{TERM}')
ctx.rule(u'TERM_OPT', u'')

ctx.rule(u'TERM', u';')
ctx.rule(u'TERM', u'\n')


#### Auxiliary rules

ctx.rule(u'TERM_EXPR_REP', u'{TERM} {EXPR} {TERM_EXPR_REP}')
ctx.rule(u'TERM_EXPR_REP', u'')

ctx.rule(u'BLOCK_VAR_OPT', u'| {BLOCK_VAR} |')
ctx.rule(u'BLOCK_VAR_OPT', u'| |')
ctx.rule(u'BLOCK_VAR_OPT', u'')

ctx.rule(u'ARGS_OPT', u'{ARGS}')
ctx.rule(u'ARGS_OPT', u'')

ctx.rule(u'ARG_AST_OPT', u',*{ARG}')
ctx.rule(u'ARG_AST_OPT', u'')

ctx.rule(u'ARG_AMP_OPT', u',&{ARG}')
ctx.rule(u'ARG_AMP_OPT', u'')

ctx.rule(u'ARG_AMP_OPT', u',&{ARG}')
ctx.rule(u'ARG_AMP_OPT', u'')

ctx.rule(u'ASSOCS_OPT', u',{ASSOCS}')
ctx.rule(u'ASSOCS_OPT', u'')

ctx.rule(u'ASSOC_REP', u',{ASSOC}{ASSOC_REP}')
ctx.rule(u'ASSOC_REP', u'')

ctx.rule(u'CALL_ARGS_BRACKETS_OPT', u'({CALL_ARGS_OPT})')
ctx.rule(u'CALL_ARGS_BRACKETS_OPT', u'')

ctx.rule(u'CALL_ARGS_OPT', u'{CALL_ARGS}')
ctx.rule(u'CALL_ARGS_OPT', u'')

ctx.rule(u'ELSIF_REP', u'eslif {EXPR} {THEN} {COMPSTMT} {ELSIF_REP}\n')
ctx.rule(u'ELSIF_REP', u'')

ctx.rule(u'ELSE_OPT', u'else {COMPSTMT}\n')
ctx.rule(u'ELSE_OPT', u'')

ctx.rule(u'INHERITANCE_OPT', u'< {IDENTIFIER}')
ctx.rule(u'INHERITANCE_OPT', u'')

ctx.rule(u'RESCUE_OPT', u'rescue {ARGS_OPT} {DO} {COMPSTMT} {RESCUE_OPT}\n')
ctx.rule(u'RESCUE_OPT', u'')

ctx.rule(u'ENSURE_OPT', u'ensure {COMPSTMT}\n')
ctx.rule(u'ENSURE_OPT', u'')

ctx.rule(u'DOTS', u'.')
ctx.rule(u'DOTS', u'::')

ctx.rule(u'MLHS_ITEM_OPT', u'{MLHS_ITEM}{MLHS_ITEM_REP}')
ctx.rule(u'MLHS_ITEM_OPT', u'')

ctx.rule(u'MLHS_ITEM_REP', u', {MLHS_ITEM}{MLHS_ITEM_REP}')
ctx.rule(u'MLHS_ITEM_REP', u'')

ctx.rule(u'IDENTIFIER_AST_OPT', u',*{IDENTIFIER}')
ctx.rule(u'IDENTIFIER_AST_OPT', u'')

ctx.rule(u'IDENTIFIER_AMP_OPT', u',&{IDENTIFIER}')
ctx.rule(u'IDENTIFIER_AMP_OPT', u'')

ctx.rule(u'IDENTIFIER_REP', u',{IDENTIFIER}{IDENTIFIER_REP}')
ctx.rule(u'IDENTIFIER_REP', u'')

#### Lex rules

ctx.rule(u'OP_ASGN', u'+=')
ctx.rule(u'OP_ASGN', u'-=')
ctx.rule(u'OP_ASGN', u'*=')
ctx.rule(u'OP_ASGN', u'/=')
ctx.rule(u'OP_ASGN', u'%=')
ctx.rule(u'OP_ASGN', u'**=')
ctx.rule(u'OP_ASGN', u'&=')
ctx.rule(u'OP_ASGN', u'|=')
ctx.rule(u'OP_ASGN', u'^=')
ctx.rule(u'OP_ASGN', u'<<=')
ctx.rule(u'OP_ASGN', u'>>=')
ctx.rule(u'OP_ASGN', u'&&=')
ctx.rule(u'OP_ASGN', u'||=')

ctx.rule(u'SYMBOL', u':{FNAME}')
ctx.rule(u'SYMBOL', u':{VARNAME}')

ctx.rule(u'FNAME', u'{IDENTIFIER}')
ctx.rule(u'FNAME', u'..')
ctx.rule(u'FNAME', u'|')
ctx.rule(u'FNAME', u'^')
ctx.rule(u'FNAME', u'&')
ctx.rule(u'FNAME', u'<=>')
ctx.rule(u'FNAME', u'==')
ctx.rule(u'FNAME', u'===')
ctx.rule(u'FNAME', u'=~')
ctx.rule(u'FNAME', u'>')
ctx.rule(u'FNAME', u'>=')
ctx.rule(u'FNAME', u'<')
ctx.rule(u'FNAME', u'<=')
ctx.rule(u'FNAME', u'+')
ctx.rule(u'FNAME', u'-')
ctx.rule(u'FNAME', u'*')
ctx.rule(u'FNAME', u'/')
ctx.rule(u'FNAME', u'%')
ctx.rule(u'FNAME', u'**')
ctx.rule(u'FNAME', u'<<')
ctx.rule(u'FNAME', u'>>')
ctx.rule(u'FNAME', u'~')
ctx.rule(u'FNAME', u'+@')
ctx.rule(u'FNAME', u'-@')
ctx.rule(u'FNAME', u'[]')
ctx.rule(u'FNAME', u'[]=')


ctx.rule(u'OPERATION', u'{IDENTIFIER}')
ctx.rule(u'OPERATION', u'{IDENTIFIER}!')
ctx.rule(u'OPERATION', u'{IDENTIFIER}?')

ctx.rule(u'VARNAME', u'{GLOBAL}')
ctx.rule(u'VARNAME', u'@{IDENTIFIER}')
ctx.rule(u'VARNAME', u'{IDENTIFIER}')

ctx.rule(u'GLOBAL', u'${IDENTIFIER}')
ctx.rule(u'GLOBAL', u'${CHAR}')
ctx.rule(u'GLOBAL', u'$-{CHAR}')

ctx.rule(u'STRING', u'"{CHARS}"')

ctx.rule(u'STRING2', u'"%Q{CHAR} {CHARS} {CHAR}"')
ctx.rule(u'STRING2', u'"%q{CHAR} {CHARS} {CHAR}"')
ctx.rule(u'STRING2', u'"%x{CHAR} {CHARS} {CHAR}"')

ctx.rule(u'HERE_DOC', u'<<{IDENTIFIER}')
ctx.rule(u'HERE_DOC', u'<<{STRING}')
ctx.rule(u'HERE_DOC', u'{CHARS}')
ctx.rule(u'HERE_DOC', u'{IDENTIFIER}')

ctx.rule(u'REGEXP', u'/{CHARS}/i')
ctx.rule(u'REGEXP', u'/{CHARS}/o')
ctx.rule(u'REGEXP', u'/{CHARS}/p')
ctx.rule(u'REGEXP', u'%r{CHAR}{CHARS}{CHAR}')

ctx.rule(u'CHARS', u'{CHAR}{CHARS}')
ctx.rule(u'CHARS', u'')

ctx.rule(u'IDENTIFIER', u'{CHAR}{CHARS}')

ctx.rule(u'CHAR', u'{LETTER}')

ctx.rule(u'NUMERIC',u'{DIGIT}{NUMERIC}')
ctx.rule(u'NUMERIC',u'{DIGIT}')

ctx.rule(u'DIGIT',u'0')
ctx.rule(u'DIGIT',u'1')
ctx.rule(u'DIGIT',u'2')
ctx.rule(u'DIGIT',u'3')
ctx.rule(u'DIGIT',u'4')
ctx.rule(u'DIGIT',u'5')
ctx.rule(u'DIGIT',u'6')
ctx.rule(u'DIGIT',u'7')
ctx.rule(u'DIGIT',u'8')
ctx.rule(u'DIGIT',u'9')

ctx.rule(u'LETTER',u'a')
ctx.rule(u'LETTER',u'b')
ctx.rule(u'LETTER',u'c')
ctx.rule(u'LETTER',u'd')
ctx.rule(u'LETTER',u'e')
ctx.rule(u'LETTER',u'f')
ctx.rule(u'LETTER',u'g')
ctx.rule(u'LETTER',u'h')
ctx.rule(u'LETTER',u'i')
ctx.rule(u'LETTER',u'j')
ctx.rule(u'LETTER',u'k')
ctx.rule(u'LETTER',u'l')
ctx.rule(u'LETTER',u'm')
ctx.rule(u'LETTER',u'n')
ctx.rule(u'LETTER',u'o')
ctx.rule(u'LETTER',u'p')
ctx.rule(u'LETTER',u'q')
ctx.rule(u'LETTER',u'r')
ctx.rule(u'LETTER',u's')
ctx.rule(u'LETTER',u't')
ctx.rule(u'LETTER',u'u')
ctx.rule(u'LETTER',u'v')
ctx.rule(u'LETTER',u'w')
ctx.rule(u'LETTER',u'x')
ctx.rule(u'LETTER',u'y')
ctx.rule(u'LETTER',u'z')
ctx.rule(u'LETTER',u'A')
ctx.rule(u'LETTER',u'B')
ctx.rule(u'LETTER',u'C')
ctx.rule(u'LETTER',u'D')
ctx.rule(u'LETTER',u'E')
ctx.rule(u'LETTER',u'F')
ctx.rule(u'LETTER',u'G')
ctx.rule(u'LETTER',u'H')
ctx.rule(u'LETTER',u'I')
ctx.rule(u'LETTER',u'J')
ctx.rule(u'LETTER',u'K')
ctx.rule(u'LETTER',u'L')
ctx.rule(u'LETTER',u'M')
ctx.rule(u'LETTER',u'N')
ctx.rule(u'LETTER',u'O')
ctx.rule(u'LETTER',u'P')
ctx.rule(u'LETTER',u'Q')
ctx.rule(u'LETTER',u'R')
ctx.rule(u'LETTER',u'S')
ctx.rule(u'LETTER',u'T')
ctx.rule(u'LETTER',u'U')
ctx.rule(u'LETTER',u'V')
ctx.rule(u'LETTER',u'W')
ctx.rule(u'LETTER',u'X')
ctx.rule(u'LETTER',u'Y')
ctx.rule(u'LETTER',u'Z')